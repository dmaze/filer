version: '4.x+not-obsolete' # 2.x doesn't support profiles, 3.x doesn't support depends_on: condition:
services:
  db:
    image: 'postgres:16'
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 60s
      timeout: 5s
      start_period: 60s
      start_interval: 5s
    ports:
      - '${POSTGRES_HOST_PORT}:5432'
  filer:
    profiles:
      - unified
    build:
      context: .
      target: runner_all
    depends_on:
      db:
        condition: service_healthy
    environment:
      SECRET_KEY_BASE:
      FILER_HOST_NAME:
      FILER_HOST_PORT:
      DATABASE_URL: ecto://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    volumes:
      - store:/store
    ports:
      - '${FILER_HOST_PORT}:4000'
  web:
    profiles:
      - distributed
    build:
      context: .
      target: runner_web
    environment:
      GOSSIP_SECRET:
      RELEASE_COOKIE:
      SECRET_KEY_BASE:
      FILER_HOST_NAME:
      FILER_HOST_PORT:
      DATABASE_URL: ecto://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    ports:
      - '${FILER_HOST_PORT}:4000'
  index:
    profiles:
      - distributed
    build:
      context: .
      target: runner_index
    environment:
      GOSSIP_SECRET:
      RELEASE_COOKIE:
      DATABASE_URL: ecto://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
  store:
    profiles:
      - distributed
    build:
      context: .
      target: runner_store
    environment:
      GOSSIP_SECRET:
      RELEASE_COOKIE:
    volumes:
      - store:/store
volumes:
  dbdata:
  store:
